/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aofm_manager;

import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;

/**
 *
 * @author REUBEN
 */
public class EmailMembersActivity extends javax.swing.JFrame {

    /**
     * Creates new form emailMembersActivity
     */
    public EmailMembersActivity() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLbl = new javax.swing.JLabel();
        recLbl = new javax.swing.JLabel();
        recField = new javax.swing.JTextField();
        nameLbl = new javax.swing.JLabel();
        nameFld = new javax.swing.JTextField();
        sendBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        headerLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        headerLbl.setText("Email Your The List Of Your Cell Members");

        recLbl.setText("Recipient's Email");

        nameLbl.setText("Your Name");

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(headerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(sendBtn)
                                .addContainerGap(194, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameFld, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                    .addComponent(recField))
                                .addGap(19, 19, 19))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(headerLbl)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(sendBtn)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        // TODO add your handling code here:
        if(nameFld.getText().isEmpty() || recField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields", "Email Message", 0);
            return;
        }
        if(!validate(recField.getText())){
            JOptionPane.showMessageDialog(null, "Enter a valid email", "Email Message", 0);
            return;
        }
        new EmailMembersWorker().execute();
    }//GEN-LAST:event_sendBtnActionPerformed

    public static final Pattern VALID_EMAIL_ADDRESS_REGEX = 
    Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);

    public static boolean validate(String emailStr) {
            Matcher matcher = VALID_EMAIL_ADDRESS_REGEX .matcher(emailStr);
            return matcher.find();
    }
    
    
    class EmailMembersWorker extends SwingWorker<Integer, Integer>{
        JProgressBar pbar;
        @Override
        protected Integer doInBackground() throws Exception
        {
            writeDbToFile wd = new writeDbToFile();
            pbar = new JProgressBar();
            pbar.setIndeterminate(true);
            String attachments[] = {"c:\\Flock_Management_System\\identities.txt"}; 
        
            // Recipient's email ID needs to be mentioned. 
            //String to = "busben97@gmail.com"; 
            // Sender's email ID needs to be mentioned 
            String from = "flockmanagment@gmail.com"; 
            //final String username = "manishaspatil";
            //change accordingly 
            final String password = "psalm231";
            //change accordingly 
            // Assuming you are sending email through relay.jangosmtp.net 
            Properties props = System.getProperties();
            String host = "smtp.gmail.com";
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.user", from);
            props.put("mail.smtp.password", password);
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            // Get the Session object. 
            Session session = Session.getInstance(props, new javax.mail.Authenticator() 
            { 
                @Override
                protected PasswordAuthentication getPasswordAuthentication() 
                { 
                    return new PasswordAuthentication(from, password);
                }
            });

            try 
            { 
            // Create a default MimeMessage object. 
            Message message = new MimeMessage(session); 
            // Set From: header field of the header. 
            message.setFrom(new InternetAddress(from)); // Set To: header field of the header.

            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recField.getText())); 
            // Set Subject: header field 
            message.setSubject("CELL MEMBERS LIST"); 
            // Create the message part 
            BodyPart messageBodyPart = new MimeBodyPart(); 
            // Now set the actual message 
            String messageBody = "Hello,\nPlease find the attached file of "+nameFld.getText()+"\'s cell members list .\nNB: This email is automated please do not reply as you may not get any feedback.\n\nThank You.\nThe Flock Team";
            messageBodyPart.setText(messageBody); 
            // Create a multipar message 
            Multipart multipart = new MimeMultipart(); 
            // Set text message part 
            multipart.addBodyPart(messageBodyPart); 
            // Part two is attachment 
            for(int i = 0; i < attachments.length; i++)
            {
                messageBodyPart = new MimeBodyPart(); 
                String filename = attachments[i]; 
                DataSource source = new FileDataSource(filename); 
                messageBodyPart.setDataHandler(new DataHandler(source)); 
                messageBodyPart.setFileName(filename); 
                multipart.addBodyPart(messageBodyPart); 
                System.out.println(filename);
            }
            // Send the complete message parts 
            message.setContent(multipart); 
            // Send message 
            Transport.send(message); 
            JOptionPane.showMessageDialog(null,"Email sent Successfully!", "Email Message", 1); 
            recField.setText("");
            nameFld.setText("");
        } 
        catch (MessagingException e) 
        { 
            JOptionPane.showMessageDialog(null, "An error occured while sending email.\nPlease make there is an active internet connection","Email Message", 0);
            throw new RuntimeException(e);    
        }
            return 42;
        }

        @Override
        protected void done()
        {
            pbar.setIndeterminate(false);
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmailMembersActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmailMembersActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmailMembersActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmailMembersActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmailMembersActivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel headerLbl;
    private javax.swing.JTextField nameFld;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField recField;
    private javax.swing.JLabel recLbl;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables
}
